import subprocess
import time

from config import database_name, database_user, database_container


def backup():
    subprocess.run(["docker", "exec", database_container, "mkdir", "-p", "/db_backup"], check=True)
    # 获取当前纳秒UTC时间, 格式为2025-04-03 10:15:28.297720438
    # Get current time in nanoseconds (UTC)
    ns_time = time.time_ns()
    # Get seconds and format time
    seconds = ns_time // 1_000_000_000
    nanoseconds = ns_time % 1_000_000_000
    # Format timestamp using strftime for the date/time part
    timestamp = f"{time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(seconds))}.{nanoseconds:09d}"
    # 备份数据库到容器内的 /tmp 目录，命名为 dev_时间戳.backup
    # subprocess.run(["docker", "exec", database_container, "pg_dump", "-U", database_user, "-d", database_name, "-F", "c", "-b", "-v", "-f", f"/db_backup/{timestamp}.backup"], check=True)
    subprocess.run(f"""
        docker exec {database_container} pg_dump \
            -U {database_user} \
            -d {database_name} \
            -F c \
            -b \
            -v \
            -f /db_backup/$(date '+%Y-%m-%d_%H:%M:%S.%6N').backup
    """, shell=True, executable="/bin/bash", check=True)

    # 将备份文件拷贝到宿主机
    # subprocess.run(["docker", "cp", f"postgres_db:/db_backup/dev_{timestamp}.backup", f"./db_backup/dev_{timestamp}.backup"], check=True)

    print(f"备份完成: {time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())} -> {timestamp}.backup")


if __name__ == "__main__":
    # 每 5 s 备份一次
    while True:
        backup()
        time.sleep(15)
