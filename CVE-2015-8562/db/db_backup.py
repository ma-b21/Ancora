import subprocess
import time

from config import database_name, database_user, database_password, database_container


def backup():
    subprocess.run(["docker", "exec", database_container, "mkdir", "-p", "/db_backup"], check=True)
    
    # 获取当前纳秒UTC时间
    ns_time = time.time_ns()
    seconds = ns_time // 1_000_000_000
    nanoseconds = ns_time % 1_000_000_000
    timestamp = f"{time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(seconds))}.{nanoseconds:09d}"
    
    # 使用mysqldump进行MySQL数据库备份
    # MySQL需要显式指定密码（可以通过环境变量或配置文件更安全地处理）
    # subprocess.run([
    #     "docker", "exec", database_container, 
    #     "mysqldump", 
    #     "-u", database_user, 
    #     f"--password={database_password}", 
    #     "--single-transaction",  # 确保一致性备份
    #     "--routines",            # 包含存储过程和函数
    #     "--triggers",            # 包含触发器
    #     "--events",              # 包含事件调度器
    #     "--databases", database_name,
    #     "-v",                    # 详细输出
    #     "-r", f"/db_backup/{timestamp}.sql"  # MySQL使用.sql作为输出文件
    # ], check=True)
    subprocess.run(f"""
        docker exec {database_container} mysqldump \
            -u {database_user} \
            --password={database_password} \
            --single-transaction \
            --routines \
            --triggers \
            --events \
            --databases {database_name} \
            -v \
            -r /db_backup/$(date '+%Y-%m-%d_%H:%M:%S.%6N').sql
    """, shell=True, executable="/bin/bash", check=True)

    # 将备份文件拷贝到宿主机（如果需要）
    # subprocess.run(["docker", "cp", f"{database_container}:/db_backup/{timestamp}.sql", f"./db_backup/{timestamp}.sql"], check=True)

    print(f"备份完成: {time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())} -> {timestamp}.sql")


if __name__ == "__main__":
    # 每 3 秒备份一次
    while True:
        backup()
        time.sleep(10)
